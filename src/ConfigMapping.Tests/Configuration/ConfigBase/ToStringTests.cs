using ConfigMapping.Tests.ConfigMapper;
using ConfigMapping.Tests.ConfigMapper.Map.Interfaces;
using NUnit.Framework;

namespace ConfigMapping.Tests.Configuration.ConfigBase
{
    public class ToStringTests
    {
        protected ISingleAppSetting SingleAppSetting;
        protected IAppSettingsConfiguration AppSettingsConfiguration;  

        [SetUp]
        protected void SetUp()
        {
            ConfigMapping.ConfigMapper.RefreshConfiguration();
            AppSettingsConfiguration = ConfigMapping.ConfigMapper.Map<IAppSettingsConfiguration>();
            SingleAppSetting = ConfigMapping.ConfigMapper.Map<ISingleAppSetting>();
        }

        [TestFixture]
        public class SingleAppSettingsToStringTest : ToStringTests
        {
            [Test]
            public void When_an_interface_has_only_one_property_then_the_property_value_can_be_accessed_via_the_ToString_method_of_the_class()
            {
                var toStringValue = SingleAppSetting.ToString();
                Assert.AreEqual(AppSettingsConfiguration.TestString, toStringValue);
                Assert.AreEqual(AppSettingsConfiguration.TestString, SingleAppSetting.TestString);
            }

            [Test]
            public void When_an_interface_has_many_properties_then_the_ToString_method_of_the_class_calls_the_base_ToString_method()
            {
                Assert.AreEqual("AutoGeneratedConfigMapping", AppSettingsConfiguration.ToString());
            }
        }
    }
}